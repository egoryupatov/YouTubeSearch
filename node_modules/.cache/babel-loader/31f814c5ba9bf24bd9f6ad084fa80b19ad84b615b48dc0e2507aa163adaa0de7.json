{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nconst initialState = {\n  isUserAuthorized: false\n};\nexport const userSlice = createSlice({\n  name: \"user\",\n  initialState,\n  reducers: {\n    setIsUserAuthorized: (state, action) => {\n      state.isUserAuthorized = action.payload;\n    }\n  }\n});\nexport const {\n  setIsUserAuthorized\n} = userSlice.actions;\nexport const selectIsUserAuthorized = state => state.user.isUserAuthorized;\nexport default userSlice.reducer;","map":{"version":3,"names":["createSlice","initialState","isUserAuthorized","userSlice","name","reducers","setIsUserAuthorized","state","action","payload","actions","selectIsUserAuthorized","user","reducer"],"sources":["/Users/egoryupatov/WebstormProjects/youtube/src/store/userSlice.ts"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\nimport type { RootState } from \"./store\";\n\ninterface UserState {\n  isUserAuthorized: boolean;\n}\n\nconst initialState: UserState = {\n  isUserAuthorized: false,\n};\n\nexport const userSlice = createSlice({\n  name: \"user\",\n  initialState,\n  reducers: {\n    setIsUserAuthorized: (state, action) => {\n      state.isUserAuthorized = action.payload;\n    },\n  },\n});\n\nexport const { setIsUserAuthorized } = userSlice.actions;\n\nexport const selectIsUserAuthorized = (state: RootState) =>\n  state.user.isUserAuthorized;\n\nexport default userSlice.reducer;\n"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAO9C,MAAMC,YAAuB,GAAG;EAC9BC,gBAAgB,EAAE;AACpB,CAAC;AAED,OAAO,MAAMC,SAAS,GAAGH,WAAW,CAAC;EACnCI,IAAI,EAAE,MAAM;EACZH,YAAY;EACZI,QAAQ,EAAE;IACRC,mBAAmB,EAAE,CAACC,KAAK,EAAEC,MAAM,KAAK;MACtCD,KAAK,CAACL,gBAAgB,GAAGM,MAAM,CAACC,OAAO;IACzC;EACF;AACF,CAAC,CAAC;AAEF,OAAO,MAAM;EAAEH;AAAoB,CAAC,GAAGH,SAAS,CAACO,OAAO;AAExD,OAAO,MAAMC,sBAAsB,GAAIJ,KAAgB,IACrDA,KAAK,CAACK,IAAI,CAACV,gBAAgB;AAE7B,eAAeC,SAAS,CAACU,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}