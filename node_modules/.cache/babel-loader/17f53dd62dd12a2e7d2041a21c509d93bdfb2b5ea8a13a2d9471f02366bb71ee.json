{"ast":null,"code":"var _jsxFileName = \"/Users/egoryupatov/WebstormProjects/youtube/src/pages/Search/Search.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { Navbar } from \"../../components/Navbar/Navbar\";\nimport \"./Search.scss\";\nimport axios from \"axios\";\nimport { APIKey } from \"../../constants/constants\";\nimport { useDispatch } from \"react-redux\";\nimport { apiTransform } from \"../../api/apiTransform\";\nimport { selectSearchRequest, selectSearchResults, setSearchRequest, setSearchResults } from \"../../store/videosSlice\";\nimport { useAppSelector } from \"../../store/hooks\";\nimport { SearchResults } from \"../SearchResults/SearchResults\";\nimport { Modal } from \"../../components/Modal/Modal\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Search = () => {\n  _s();\n  const [areSearchResultsDisplayed, setAreSearchResultsDisplayed] = useState(false);\n  const dispatch = useDispatch();\n  const searchResults = useAppSelector(selectSearchResults);\n  const searchRequest = useAppSelector(selectSearchRequest);\n  const onSearchClick = () => {\n    axios.get(`https://youtube.googleapis.com/youtube/v3/search?part=snippet&maxResults=12&q=${searchRequest}&key=${APIKey}`).then(response => {\n      dispatch(setSearchResults(apiTransform(response)));\n      setAreSearchResultsDisplayed(true);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Modal, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"searchPageContainer\",\n      children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), areSearchResultsDisplayed ? /*#__PURE__*/_jsxDEV(SearchResults, {\n        searchResults: searchResults,\n        searchRequest: searchRequest\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"searchContainer\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"searchTitle\",\n          children: \"Search for a video\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"searchForm\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"What are you looking for?\",\n            onChange: event => dispatch(setSearchRequest(event.target.value))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: onSearchClick,\n            children: \"Search\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(Search, \"aOXKD+bXzBkmuy3RYVop5PvIHmE=\", false, function () {\n  return [useDispatch, useAppSelector, useAppSelector];\n});\n_c = Search;\nvar _c;\n$RefreshReg$(_c, \"Search\");","map":{"version":3,"names":["React","useState","Navbar","axios","APIKey","useDispatch","apiTransform","selectSearchRequest","selectSearchResults","setSearchRequest","setSearchResults","useAppSelector","SearchResults","Modal","Search","areSearchResultsDisplayed","setAreSearchResultsDisplayed","dispatch","searchResults","searchRequest","onSearchClick","get","then","response","event","target","value"],"sources":["/Users/egoryupatov/WebstormProjects/youtube/src/pages/Search/Search.tsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport { Navbar } from \"../../components/Navbar/Navbar\";\nimport \"./Search.scss\";\nimport axios from \"axios\";\nimport { APIKey } from \"../../constants/constants\";\nimport { useDispatch } from \"react-redux\";\nimport { apiTransform } from \"../../api/apiTransform\";\nimport {\n  selectSearchRequest,\n  selectSearchResults,\n  setSearchRequest,\n  setSearchResults,\n} from \"../../store/videosSlice\";\nimport { useAppSelector } from \"../../store/hooks\";\nimport { SearchResults } from \"../SearchResults/SearchResults\";\nimport { Modal } from \"../../components/Modal/Modal\";\n\nexport const Search: React.FC = () => {\n  const [areSearchResultsDisplayed, setAreSearchResultsDisplayed] =\n    useState(false);\n  const dispatch = useDispatch();\n  const searchResults = useAppSelector(selectSearchResults);\n  const searchRequest = useAppSelector(selectSearchRequest);\n\n  const onSearchClick = () => {\n    axios\n      .get(\n        `https://youtube.googleapis.com/youtube/v3/search?part=snippet&maxResults=12&q=${searchRequest}&key=${APIKey}`\n      )\n      .then((response) => {\n        dispatch(setSearchResults(apiTransform(response)));\n        setAreSearchResultsDisplayed(true);\n      });\n  };\n\n  return (\n    <>\n      <Modal />\n      <div className=\"searchPageContainer\">\n        <Navbar />\n\n        {areSearchResultsDisplayed ? (\n          <SearchResults\n            searchResults={searchResults}\n            searchRequest={searchRequest}\n          />\n        ) : (\n          <div className=\"searchContainer\">\n            <div className=\"searchTitle\">Search for a video</div>\n            <div className=\"searchForm\">\n              <input\n                type=\"text\"\n                placeholder=\"What are you looking for?\"\n                onChange={(event) =>\n                  dispatch(setSearchRequest(event.target.value))\n                }\n              />\n              <button onClick={onSearchClick}>Search</button>\n            </div>\n          </div>\n        )}\n      </div>\n    </>\n  );\n};\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,MAAM,QAAQ,gCAAgC;AACvD,OAAO,eAAe;AACtB,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,MAAM,QAAQ,2BAA2B;AAClD,SAASC,WAAW,QAAQ,aAAa;AACzC,SAASC,YAAY,QAAQ,wBAAwB;AACrD,SACEC,mBAAmB,EACnBC,mBAAmB,EACnBC,gBAAgB,EAChBC,gBAAgB,QACX,yBAAyB;AAChC,SAASC,cAAc,QAAQ,mBAAmB;AAClD,SAASC,aAAa,QAAQ,gCAAgC;AAC9D,SAASC,KAAK,QAAQ,8BAA8B;AAAC;AAAA;AAErD,OAAO,MAAMC,MAAgB,GAAG,MAAM;EAAA;EACpC,MAAM,CAACC,yBAAyB,EAAEC,4BAA4B,CAAC,GAC7Df,QAAQ,CAAC,KAAK,CAAC;EACjB,MAAMgB,QAAQ,GAAGZ,WAAW,EAAE;EAC9B,MAAMa,aAAa,GAAGP,cAAc,CAACH,mBAAmB,CAAC;EACzD,MAAMW,aAAa,GAAGR,cAAc,CAACJ,mBAAmB,CAAC;EAEzD,MAAMa,aAAa,GAAG,MAAM;IAC1BjB,KAAK,CACFkB,GAAG,CACD,iFAAgFF,aAAc,QAAOf,MAAO,EAAC,CAC/G,CACAkB,IAAI,CAAEC,QAAQ,IAAK;MAClBN,QAAQ,CAACP,gBAAgB,CAACJ,YAAY,CAACiB,QAAQ,CAAC,CAAC,CAAC;MAClDP,4BAA4B,CAAC,IAAI,CAAC;IACpC,CAAC,CAAC;EACN,CAAC;EAED,oBACE;IAAA,wBACE,QAAC,KAAK;MAAA;MAAA;MAAA;IAAA,QAAG,eACT;MAAK,SAAS,EAAC,qBAAqB;MAAA,wBAClC,QAAC,MAAM;QAAA;QAAA;QAAA;MAAA,QAAG,EAETD,yBAAyB,gBACxB,QAAC,aAAa;QACZ,aAAa,EAAEG,aAAc;QAC7B,aAAa,EAAEC;MAAc;QAAA;QAAA;QAAA;MAAA,QAC7B,gBAEF;QAAK,SAAS,EAAC,iBAAiB;QAAA,wBAC9B;UAAK,SAAS,EAAC,aAAa;UAAA,UAAC;QAAkB;UAAA;UAAA;UAAA;QAAA,QAAM,eACrD;UAAK,SAAS,EAAC,YAAY;UAAA,wBACzB;YACE,IAAI,EAAC,MAAM;YACX,WAAW,EAAC,2BAA2B;YACvC,QAAQ,EAAGK,KAAK,IACdP,QAAQ,CAACR,gBAAgB,CAACe,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC;UAC9C;YAAA;YAAA;YAAA;UAAA,QACD,eACF;YAAQ,OAAO,EAAEN,aAAc;YAAA,UAAC;UAAM;YAAA;YAAA;YAAA;UAAA,QAAS;QAAA;UAAA;UAAA;UAAA;QAAA,QAC3C;MAAA;QAAA;QAAA;QAAA;MAAA,QAET;IAAA;MAAA;MAAA;MAAA;IAAA,QACG;EAAA,gBACL;AAEP,CAAC;AAAC,GA/CWN,MAAgB;EAAA,QAGVT,WAAW,EACNM,cAAc,EACdA,cAAc;AAAA;AAAA,KALzBG,MAAgB;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}