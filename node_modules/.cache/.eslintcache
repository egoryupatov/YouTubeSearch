[{"/Users/egoryupatov/WebstormProjects/youtube/src/index.tsx":"1","/Users/egoryupatov/WebstormProjects/youtube/src/store/store.ts":"2","/Users/egoryupatov/WebstormProjects/youtube/src/pages/Authorization/Authorization.tsx":"3","/Users/egoryupatov/WebstormProjects/youtube/src/components/AuthForm/AuthForm.tsx":"4","/Users/egoryupatov/WebstormProjects/youtube/src/components/Navbar/Navbar.tsx":"5","/Users/egoryupatov/WebstormProjects/youtube/src/pages/Search/Search.tsx":"6","/Users/egoryupatov/WebstormProjects/youtube/src/pages/SearchResults/SearchResults.tsx":"7","/Users/egoryupatov/WebstormProjects/youtube/src/components/VideoGrid/GridVideo.tsx":"8","/Users/egoryupatov/WebstormProjects/youtube/src/components/VideoList/ListVideo.tsx":"9","/Users/egoryupatov/WebstormProjects/youtube/src/store/hooks.ts":"10","/Users/egoryupatov/WebstormProjects/youtube/src/store/videosSlice.ts":"11","/Users/egoryupatov/WebstormProjects/youtube/src/constants/constants.ts":"12","/Users/egoryupatov/WebstormProjects/youtube/src/api/apiTransform.ts":"13","/Users/egoryupatov/WebstormProjects/youtube/src/pages/Favorites/Favorites.tsx":"14","/Users/egoryupatov/WebstormProjects/youtube/src/components/Modal/Modal.tsx":"15"},{"size":1104,"mtime":1672763281382,"results":"16","hashOfConfig":"17"},{"size":425,"mtime":1672675751279,"results":"18","hashOfConfig":"17"},{"size":219,"mtime":1672465540990,"results":"19","hashOfConfig":"17"},{"size":2780,"mtime":1672678387980,"results":"20","hashOfConfig":"17"},{"size":846,"mtime":1672763204927,"results":"21","hashOfConfig":"17"},{"size":1941,"mtime":1672936097489,"results":"22","hashOfConfig":"17"},{"size":3487,"mtime":1673021744156,"results":"23","hashOfConfig":"24"},{"size":670,"mtime":1672681970381,"results":"25","hashOfConfig":"17"},{"size":514,"mtime":1672681984436,"results":"26","hashOfConfig":"17"},{"size":349,"mtime":1672456320000,"results":"27","hashOfConfig":"17"},{"size":969,"mtime":1672762125150,"results":"28","hashOfConfig":"17"},{"size":276,"mtime":1673022668139,"results":"29","hashOfConfig":"24"},{"size":549,"mtime":1672753749271,"results":"30","hashOfConfig":"17"},{"size":811,"mtime":1673022779365,"results":"31","hashOfConfig":"24"},{"size":3507,"mtime":1673022293066,"results":"32","hashOfConfig":"24"},{"filePath":"33","messages":"34","suppressedMessages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"1yxrszx",{"filePath":"37","messages":"38","suppressedMessages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"41","messages":"42","suppressedMessages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"44","messages":"45","suppressedMessages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"40"},{"filePath":"48","messages":"49","suppressedMessages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"36"},{"filePath":"52","messages":"53","suppressedMessages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"36"},{"filePath":"56","messages":"57","suppressedMessages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"1rq5xee",{"filePath":"59","messages":"60","suppressedMessages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"40"},{"filePath":"63","messages":"64","suppressedMessages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"40"},{"filePath":"67","messages":"68","suppressedMessages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"70","messages":"71","suppressedMessages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"73","messages":"74","suppressedMessages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"76","messages":"77","suppressedMessages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"79","messages":"80","suppressedMessages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"82","messages":"83","suppressedMessages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/egoryupatov/WebstormProjects/youtube/src/index.tsx",[],[],[],"/Users/egoryupatov/WebstormProjects/youtube/src/store/store.ts",[],[],[],"/Users/egoryupatov/WebstormProjects/youtube/src/pages/Authorization/Authorization.tsx",[],[],"/Users/egoryupatov/WebstormProjects/youtube/src/components/AuthForm/AuthForm.tsx",["85","86","87","88","89"],[],"import React, { useEffect, useState } from \"react\";\nimport \"./AuthForm.scss\";\nimport { useNavigate } from \"react-router-dom\";\n\nexport const AuthForm: React.FC = () => {\n  const [isPasswordVisible, setIsPasswordVisible] = useState(false);\n  const [isErrorMessageVisible, setIsErrorMessageVisible] = useState(false);\n  const navigate = useNavigate();\n  let users = require(\"../../users.json\");\n\n  const [userData, setUserData] = useState({\n    username: \"\",\n    password: \"\",\n  });\n\n  useEffect(() => {\n    if (localStorage.getItem(\"token\")) {\n      navigate(\"/search\");\n    }\n  }, []);\n\n  const onPasswordVisibilityChange = () => {\n    setIsPasswordVisible((prevState) => !prevState);\n  };\n  const onSignInClick = () => {\n    users.map((user: any) => {\n      if (\n        user.username === userData.username &&\n        user.password === userData.password\n      ) {\n        localStorage.setItem(\"token\", \"superToken\");\n        localStorage.setItem(\"username\", `${userData.username}`);\n        navigate(\"/search\");\n      } else {\n        setIsErrorMessageVisible(true);\n      }\n    });\n  };\n\n  return (\n    <div className=\"formContainer\">\n      <div className=\"authForm\">\n        <div className=\"logoContainer\">\n          <img src=\"/images/logo.svg\" />\n        </div>\n        <div className=\"textContainer\">Sign in</div>\n        <div className=\"inputContainer\">\n          <div className=\"textField\">\n            <label>Username</label>\n            <input\n              type=\"text\"\n              onChange={(event) =>\n                setUserData({ ...userData, username: event.target.value })\n              }\n            />\n          </div>\n          <div className=\"textField\">\n            <label>Password</label>\n            <div className=\"passwordField\">\n              <input\n                type={isPasswordVisible ? \"text\" : \"password\"}\n                onChange={(event) =>\n                  setUserData({ ...userData, password: event.target.value })\n                }\n              />\n\n              {isPasswordVisible ? (\n                <img\n                  onClick={onPasswordVisibilityChange}\n                  src=\"/images/eye-on-blue.svg\"\n                />\n              ) : (\n                <img\n                  onClick={onPasswordVisibilityChange}\n                  src=\"/images/eye-off-blue.svg\"\n                />\n              )}\n            </div>\n          </div>\n          {isErrorMessageVisible ? (\n            <div className=\"textField\">\n              <div className=\"errorMessage\">\n                There is no such user, try again!\n              </div>\n            </div>\n          ) : null}\n        </div>\n        <div className=\"buttonContainer\">\n          <button onClick={onSignInClick}>Sign in</button>\n        </div>\n      </div>\n    </div>\n  );\n};\n","/Users/egoryupatov/WebstormProjects/youtube/src/components/Navbar/Navbar.tsx",["90"],[],"import React from \"react\";\nimport \"./Navbar.scss\";\nimport { Link, useNavigate } from \"react-router-dom\";\n\nexport const Navbar: React.FC = () => {\n  const navigate = useNavigate();\n  const onSignOutClick = () => {\n    localStorage.clear();\n    navigate(\"/\");\n  };\n\n  return (\n    <div className=\"navbar\">\n      <div className=\"navbarContainer\">\n        <div className=\"leftMenu\">\n          <Link to=\"/\">\n            <img className=\"navbarLogo\" src=\"/images/logo.svg\" />\n          </Link>\n          <Link to=\"/search\">\n            <div>Search</div>\n          </Link>\n          <Link to=\"/favorites\">\n            <div>Favorites</div>\n          </Link>\n        </div>\n        <div className=\"rightMenu\">\n          <div className=\"signOut\" onClick={onSignOutClick}>\n            Sign out\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n","/Users/egoryupatov/WebstormProjects/youtube/src/pages/Search/Search.tsx",["91"],[],"import React, { useState } from \"react\";\nimport { Navbar } from \"../../components/Navbar/Navbar\";\nimport \"./Search.scss\";\nimport axios from \"axios\";\nimport { APIKey } from \"../../constants/constants\";\nimport { useDispatch } from \"react-redux\";\nimport { apiTransform } from \"../../api/apiTransform\";\nimport {\n  selectSearchRequest,\n  selectSearchResults,\n  setSearchRequest,\n  setSearchResults,\n} from \"../../store/videosSlice\";\nimport { useAppSelector } from \"../../store/hooks\";\nimport { SearchResults } from \"../SearchResults/SearchResults\";\nimport { Modal } from \"../../components/Modal/Modal\";\n\nexport const Search: React.FC = () => {\n  const [areSearchResultsDisplayed, setAreSearchResultsDisplayed] =\n    useState(false);\n  const dispatch = useDispatch();\n  const searchResults = useAppSelector(selectSearchResults);\n  const searchRequest = useAppSelector(selectSearchRequest);\n\n  const onSearchClick = () => {\n    axios\n      .get(\n        `https://youtube.googleapis.com/youtube/v3/search?part=snippet&maxResults=12&q=${searchRequest}&key=${APIKey}`\n      )\n      .then((response) => {\n        dispatch(setSearchResults(apiTransform(response)));\n        setAreSearchResultsDisplayed(true);\n      });\n  };\n\n  return (\n    <div className=\"searchPageContainer\">\n      <Navbar />\n\n      {areSearchResultsDisplayed ? (\n        <SearchResults\n          searchResults={searchResults}\n          searchRequest={searchRequest}\n        />\n      ) : (\n        <div className=\"searchContainer\">\n          <div className=\"searchTitle\">Search for a video</div>\n          <div className=\"searchForm\">\n            <input\n              type=\"text\"\n              placeholder=\"What are you looking for?\"\n              onChange={(event) =>\n                dispatch(setSearchRequest(event.target.value))\n              }\n            />\n            <button onClick={onSearchClick}>Search</button>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","/Users/egoryupatov/WebstormProjects/youtube/src/pages/SearchResults/SearchResults.tsx",["92","93","94","95","96"],[],"/Users/egoryupatov/WebstormProjects/youtube/src/components/VideoGrid/GridVideo.tsx",["97"],[],"import React from \"react\";\nimport \"./GridView.scss\";\nimport { Video } from \"../../constants/constants\";\n\nexport const GridVideo: React.FC<Video> = (props) => {\n  return (\n    <div className=\"videoGrid\">\n      <div className=\"preview\">\n        <img src={props.preview} />\n      </div>\n      <div className=\"title\">\n        {props.title.length >= 56\n          ? props.title.slice(0, 56) + \"...\"\n          : props.title}\n      </div>\n      <div className=\"desc\">\n        <div>\n          {props.channel.length >= 27\n            ? props.channel.slice(0, 27) + \"...\"\n            : props.channel}\n        </div>\n        <div>{props.views}</div>\n      </div>\n    </div>\n  );\n};\n","/Users/egoryupatov/WebstormProjects/youtube/src/components/VideoList/ListVideo.tsx",["98"],[],"import React from \"react\";\nimport { Video } from \"../../constants/constants\";\nimport \"./ListView.scss\";\n\nexport const ListVideo: React.FC<Video> = (props) => {\n  return (\n    <div className=\"listVideo\">\n      <div className=\"preview\">\n        <img src={props.preview} />\n      </div>\n      <div className=\"info\">\n        <div className=\"title\">{props.title}</div>\n        <div className=\"desc\">\n          <div>{props.channel}</div>\n          <div>{props.views}</div>\n        </div>\n      </div>\n    </div>\n  );\n};\n","/Users/egoryupatov/WebstormProjects/youtube/src/store/hooks.ts",[],[],"/Users/egoryupatov/WebstormProjects/youtube/src/store/videosSlice.ts",[],[],"/Users/egoryupatov/WebstormProjects/youtube/src/constants/constants.ts",[],[],"/Users/egoryupatov/WebstormProjects/youtube/src/api/apiTransform.ts",["99"],[],"/Users/egoryupatov/WebstormProjects/youtube/src/pages/Favorites/Favorites.tsx",[],[],"/Users/egoryupatov/WebstormProjects/youtube/src/components/Modal/Modal.tsx",[],[],{"ruleId":"100","severity":1,"message":"101","line":20,"column":6,"nodeType":"102","endLine":20,"endColumn":8,"suggestions":"103"},{"ruleId":"104","severity":1,"message":"105","line":26,"column":27,"nodeType":"106","messageId":"107","endLine":26,"endColumn":29},{"ruleId":"108","severity":1,"message":"109","line":44,"column":11,"nodeType":"110","endLine":44,"endColumn":41},{"ruleId":"108","severity":1,"message":"109","line":68,"column":17,"nodeType":"110","endLine":71,"endColumn":19},{"ruleId":"108","severity":1,"message":"109","line":73,"column":17,"nodeType":"110","endLine":76,"endColumn":19},{"ruleId":"108","severity":1,"message":"109","line":17,"column":13,"nodeType":"110","endLine":17,"endColumn":66},{"ruleId":"111","severity":1,"message":"112","line":16,"column":10,"nodeType":"113","messageId":"114","endLine":16,"endColumn":15},{"ruleId":"111","severity":1,"message":"115","line":2,"column":10,"nodeType":"113","messageId":"114","endLine":2,"endColumn":16},{"ruleId":"111","severity":1,"message":"116","line":6,"column":18,"nodeType":"113","messageId":"114","endLine":6,"endColumn":23},{"ruleId":"108","severity":1,"message":"109","line":56,"column":11,"nodeType":"110","endLine":59,"endColumn":13},{"ruleId":"108","severity":1,"message":"109","line":71,"column":13,"nodeType":"110","endLine":74,"endColumn":15},{"ruleId":"108","severity":1,"message":"109","line":75,"column":13,"nodeType":"110","endLine":78,"endColumn":15},{"ruleId":"108","severity":1,"message":"109","line":9,"column":9,"nodeType":"110","endLine":9,"endColumn":36},{"ruleId":"108","severity":1,"message":"109","line":9,"column":9,"nodeType":"110","endLine":9,"endColumn":36},{"ruleId":"104","severity":1,"message":"105","line":7,"column":45,"nodeType":"106","messageId":"107","endLine":7,"endColumn":47},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'navigate'. Either include it or remove the dependency array.","ArrayExpression",["117"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","@typescript-eslint/no-unused-vars","'Modal' is defined but never used.","Identifier","unusedVar","'Navbar' is defined but never used.","'Video' is defined but never used.",{"desc":"118","fix":"119"},"Update the dependencies array to be: [navigate]",{"range":"120","text":"121"},[580,582],"[navigate]"]